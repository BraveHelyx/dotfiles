" Template for a user configured vimrc.
" Extends http://vim.wikia.com/wiki/Example_vimrc
" The vim-plug section at the bottom of the file.

" Set 'nocompatible' to ward against unexpected distro configuration.
set nocompatible

" Determins the type of a file for vim based on its name and possibly its
" contents. Performs 'intelligent' auto-indenting per filetype.
filetype indent plugin on

" Enable syntax highlighting
syntax on

" The 'hidden' option allows you to re-use the same window and switch from an
" unsaved buffer without saving it first. Also allows you to keep an undo
" history for multiple files when re-using the same window in this way.
" Persistant undos will occur across multiple files in the same window. You
" have been warned. Vim will complain if you try to quit without saving, and
" swap files will keep you safe is your computer crashes.
set hidden

" Better command-line completion
set wildmenu

" Show partial commands in the last line of the screen
set showcmd

" Highlight searches (use <C-L> to temporarily turn off highlighting; see the
" mapping of <C-L> below)
set hlsearch

" Modelines have historically been a source of security vulnerabilities. As
" such, it may be a good idea to disable them and use the securemodelines
" script, <http://www.vim.org/scripts/script.php?script_id=1876
" set nomodeline

" Use case insensitive search, except when using capital letters
set ignorecase
set smartcase

" Allow backspacing over autoindent, line breaks and start of insert action
set backspace=indent,eol,start

" When opening a new line and no filetype-specific indenting is enabled, keep
" the same indent as the line you're currently on.
set autoindent

" Stop certain movements from always going to the first character of a line.
" While this behaviour deviates from that of Vi, it does what most users
" coming from other editors would expect.
set nostartofline

" Display the cursor position on the last line of the screen or in the status
" line of a window
set ruler

" Always display the status line, even if only one window is displayed
set laststatus=2

" Instead of failing a command because of unsaved changes, instead raise a
" dialogue asking if you wish to save changed files.
set confirm

" Use visual bell instead of beeping when doing something wrong.
set visualbell

" And reset  the terminal code for the visual bell. If visualbell is set, and
" this line is also included, vim will neither Flash nor beep. If visualbell
" is unset, this does nothing.
set t_vb=

" Enable use of the mouse for all modes
set mouse=a

" Set the command window height to 2 lines, to avoid many cases of having to
" press <Enter> to continue
set cmdheight=2

" Display line numbers on the left
set number

" Quickly time out on keycodes, but never time out on mappings
set notimeout ttimeout ttimeoutlen=200

" Use <F11> to toggle between 'paste' and 'nopaste'
set pastetoggle=<F11>

" Indentation settings for using 4 spaces instead of tabs. Do not change
" 'tabstop' from its default value of 8 with this setup.
set shiftwidth=4
set softtabstop=4
set expandtab

" Map Y to act like D and C, i.e. to yank until EOL rather than act as yy,
" which is the default
map Y y$

" Map <C-L> (redraw screen) to also turn off search highlighting until the
" next search
" nnoremap <C-L> :nohl<CR><C-L>

" Extension of community vimrc below
" Easier split window navigation in vim
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" vvvv Section begin for vim-plug vvvv
call plug#begin('~/.vim/plugged')
" Add more sophisticated vim macros for multi-cursor
Plug 'terryma/vim-multiple-cursors'
" Plugin that overrides vim modelines with securemodelines
Plug 'ciaranm/securemodelines'
" Activate fzf to system and vim via vim
Plug 'junegunn/fzf', { 'dir': '~/.zfzfzf/fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
" Prettyier vim status-line.
Plug 'itchyny/lightline.vim'
" Nerdtree, only loaded on-demand.
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
" Bracket/Parenthesis macros and keymappings
Plug 'tpope/vim-surround'
" UNIX shell commands as vim commands
Plug 'tpope/vim-eunuch'
" Vim code completions
Plug 'Valloric/YouCompleteMe'
" Initialize plugin system
call plug#end()
" ^^^^ Section end for vim-plug ^^^^^

" vvvv vim-plug plugin specific configuration below vvvv
" NERDTree Plugin
map <C-o> :NERDTreeToggle<CR>
" vim-multiple-cursors Plugin
" let g:multi_cursor_use_default_mapping=0 " Clear default
" let g:multi_cursor_start_word_key         = '<C-n>'
" let g:multi_cursor_select_all_word_key    = '<A-n>'
" let g:multi_cursor_start_key              = 'g<C-n>'
" let g:multi_cursor_select_all_key         = 'g<A-n>'
" let g:multi_cursor_next_key               = '<C-n>'
" let g:multi_cursor_prev_key               = '<C-p>'
" let g:multi_cursor_skip_key               = '<C-x>'
" let g:multi_cursor_quit_key               = '<Esc>'
"

" vvvv Section begin for neovim vvvv

if has('nvim')
    " Neovim specific commands
    set rtp^=/usr/share/vim/vimfiles/
endif
